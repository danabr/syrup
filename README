Syrup - a persistent erlang:apply_after.
========================================================================

Usage
------------------------------------------------------------------------
1> syrup:start_link().
2> syrup:delay(5000, io, format, ["this will be printed in 5s"]).

Or:
1> syrup:start([{file, "/tmp/custom_file"}]).
2> syrup:delay(5000, io, format, ["all task are persisted"]).
3> syrup:stop().
... <- No message will be printed since syrup has stopped. -> ...
4> syrup:start([{file, "/tmp/custom_file"}]).
... <- Message will be printed after this point -> ...

Rationale
------------------------------------------------------------------------
syrup can be used whenever you want to do a erlang:apply:after, but also
want to make sure that delayed tasks are not lost if the node goes down.
syrup provides this by using a dets table. If the syrup server dies and
and is later started again, all remaining delayed tasks will be
rescheduled.
